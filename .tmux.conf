# ステータスバーを bottom に配置する
set-option -g status-position bottom

# 左右のステータスバーの長さを決定する
set-option -g status-left-length 90
set-option -g status-right-length 200

# 最左に表示
set-option -g status-left "#[bold]TMUX #[default] #P | #H #[bg=default,fg=default] Session:#S "
# 最右に表示
set-option -g status-right "| #(sh ~/.tmux/ip_addr.sh) | #(sh ~/.tmux/get_wifi.sh) | #[fg=colour014] %m/%d %H:%M:%S#[default] | #(whoami) | "

# ステータスバーを Utf-8 に対応
# set-option -g status-utf8 on


# ステータスバーを1秒毎に描画し直す
set-option -g status-interval 1

# Window 名をカレントディレクトリへ自動変更
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'

# センタライズ（主にウィンドウ番号など）
set-option -g status-justify centre

## ヴィジュアルノーティフィケーションを有効にする
setw -g monitor-activity on
set -g visual-activity on


# 256色端末を使用する
set -g default-terminal "screen-256color"
set -g terminal-overrides "xterm:colors=256"

# ステータスバーの色を設定する
# set -g status-fg black
# set -g status-bg colour81
set -g status-fg white
set -g status-bg black



# マウス使う
set-option -g mouse on

# ----- bind keys -----
# C-bのキーバインドを解除する
unbind C-b
# prefixキーを変更する
set -g prefix C-p


# Viのキーバインド
setw -g mode-keys vi

# キーストロークのディレイを減らす
set -sg escape-time 1

# 設定ファイルをリロードする
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# | でペインを縦に分割する
bind \\ split-window -h -c "#{pane_current_path}"

# - でペインを横に分割する
bind - split-window -v -c "#{pane_current_path}"

# Vimのキーバインドでペインを移動する
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-h select-pane -L
bind -n M-l select-pane -R

bind -r h select-window -t :-
bind -r l select-window -t :+

# 新規のWindowやPainをカレントディレクトリで開く
bind c new-window -c '#{pane_current_path}'
bind '"' split-window -c '#{pane_current_path}'
bind % split-window -h -c '#{pane_current_path}'

# コピー系
# vim <=> tmux 間でクリップボード利用を可能にする
# v tmuxでのselectionモード開始
# y copyしてselectionモードを終了
# Enter yと同じ動作
## For Mac
if-shell "uname | grep -q Darwin" \
	'set-option -g default-command "exec reattach-to-user-namespace -l $SHELL"'

if-shell "uname | grep -q Darwin" \
	'bind-key -T copy-mode-vi v send-keys -X begin-selection \; display "Copy mode!"'
if-shell "uname | grep -q Darwin" \
	'bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"'
if-shell "uname | grep -q Darwin" \
	'bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"'

## For Linux
if-shell 'type xsel' \
	"bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xsel -ib'"
if-shell 'type xsel' \
	"bind-key -T copy-mode-vi Y send-keys -X copy-pipe 'xsel -ib'"
if-shell 'type xsel' \
	"bind ] run-shell \
		'xsel -ob | xargs -0 -I{} tmux set-buffer -- {} && tmux paste-buffer'"
